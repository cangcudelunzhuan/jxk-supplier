'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /**
uthor: 谭生虎 TanShenghu tanshenghu@163.com
pdate: 2020-03-26
escription: 提现 组件



require('antd/lib/modal/style');

require('antd/lib/message/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formControl = require('../form-control');

var _formControl2 = _interopRequireDefault(_formControl);

var _utils = require('@jxkang/utils');

var _style = require('./style');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * merPriv   用户私有域
 * 商户业务域 p_m:pc-m端,  p_b:pc-b端, p_shop:pc-服务商端,  m_h5:m端-h5
 * requestType: P、 M
 * 提现接口只能接收 四个参数 amount,thirdBankCardId,requestType,merPriv
 */

var noop = function noop() {};
function Withdrawal(_ref) {
  var _ref$bankUrl = _ref.bankUrl,
      bankUrl = _ref$bankUrl === undefined ? function (reqModel) {
    return (0, _utils.$get)('/settleservice/hf/pay-c/user-bank-list', reqModel);
  } : _ref$bankUrl,
      _ref$url = _ref.url,
      url = _ref$url === undefined ? function (reqModel) {
    return (0, _utils.$post)('/settleservice/trade/withdraw-api', reqModel);
  } : _ref$url,
      _ref$enableUrl = _ref.enableUrl,
      enableUrl = _ref$enableUrl === undefined ? function (reqModel) {
    return (0, _utils.$get)('/settleservice/fund-account/show', reqModel);
  } : _ref$enableUrl,
      _ref$configUrl = _ref.configUrl,
      configUrl = _ref$configUrl === undefined ? function (reqModel) {
    return (0, _utils.$get)('/settleservice/withdraw/config', reqModel);
  } : _ref$configUrl,
      visible = _ref.visible,
      _ref$minAmount = _ref.minAmount,
      minAmount = _ref$minAmount === undefined ? 1 : _ref$minAmount,
      _ref$maxAmount = _ref.maxAmount,
      maxAmount = _ref$maxAmount === undefined ? 1 : _ref$maxAmount,
      _ref$onCancel = _ref.onCancel,
      onCancel = _ref$onCancel === undefined ? noop : _ref$onCancel,
      onOk = _ref.onOk,
      clientName = _ref.clientName,
      _ref$setParams = _ref.setParams,
      setParams = _ref$setParams === undefined ? function (p) {
    return {
      amount: p.amount,
      merPriv: clientName || 'p_shop',
      requestType: 'P',
      thirdBankCardId: p.currentBank.bindCardId
    };
  } : _ref$setParams;

  var _useState = (0, _react.useState)({ minAmount: minAmount, amount: null, maxAmount: maxAmount, currentBank: {} }),
      _useState2 = _slicedToArray(_useState, 2),
      amountValue = _useState2[0],
      setAmount = _useState2[1];

  var _useState3 = (0, _react.useState)({}),
      _useState4 = _slicedToArray(_useState3, 2),
      detail = _useState4[0],
      setDetail = _useState4[1];

  var _useState5 = (0, _react.useState)([]),
      _useState6 = _slicedToArray(_useState5, 2),
      bankList = _useState6[0],
      setBankList = _useState6[1];

  /**
   * 选择将要提现的银行卡
   */


  var changeBankCard = function changeBankCard(v, item) {
    amountValue.currentBank = v ? item : {};
    setAmount(_extends({}, amountValue));
  };

  (0, _react.useEffect)(function () {
    /**
     * 银行数据列表
     */
    bankUrl().then(function (resModel) {
      if (Array.isArray(resModel)) {
        setBankList(resModel);
        // 如果只有一个选项，默认勾选上
        if (resModel.length === 1) {
          changeBankCard(true, resModel[0]);
        }
      }
    });
    /**
     * 可取现额度
     */
    enableUrl().then(function (resModel) {
      if (resModel) {
        Object.assign(detail, resModel);
        amountValue.maxAmount = resModel.balanceAccount;
        setDetail(_extends({}, detail));
        setAmount(_extends({}, amountValue));
      }
    });
    /**
     * 提现手续费标准
     */
    configUrl().then(function (resModel) {
      if (resModel) {
        Object.assign(detail, resModel);
        setDetail(_extends({}, detail));
      }
    });
  }, []);

  /**
   * 计算要扣除的金额
   */
  var computeOffAmount = function computeOffAmount() {
    var sumVal = detail.withdrawServiceRate * 0.01 * amountValue.amount + detail.withdrawFeeAmount;
    if (sumVal.toString) {
      var n = sumVal.toString().match(/\.\d{2}(\d)/);
      var needVal = (/[^\.]+\.\d{0,2}/.exec(sumVal.toString()) || [])[0];
      if (n && n[1] && needVal) {
        if (n[1] > 4) {
          return (needVal.replace(/\./, '') * 1 + 1).toString().replace(/(\d{2})$/, '.$1');
        }
        return needVal;
      }
    }
    return sumVal;
  };

  /**
   * 确定提现
   */
  var onOkByAmount = function onOkByAmount() {
    if (!amountValue.amount) {
      return _message3.default.warn('请输入提现金额');
    }if (!amountValue.currentBank || !amountValue.currentBank.id) {
      return _message3.default.warn('请选择提现银行卡');
    }
    var params = setParams(amountValue);
    url(params).then(function (resModel) {
      if (typeof onOk === 'function') {
        onOk(resModel);
      } else if (resModel) {
        var str = resModel.merPriv.indexOf('?') > 1 ? '&' : '?';
        resModel.merPriv = '' + resModel.merPriv + str + 'status=1&msg=' + resModel.respDesc + '&code=' + resModel.respCode;
        location.href = resModel.merPriv;
      }
    });
  };

  /**
   * 计算预计实际到账金额
   */
  var groundAmount = function groundAmount() {
    // 可提现金额
    // const balanceAccount = detail.balanceAccount;
    if (amountValue.amount) {
      var resVal = '' + (amountValue.amount - (amountValue.amount * detail.withdrawServiceRate * 0.01 + detail.withdrawFeeAmount));
      if (resVal !== 'NaN') {
        var sres = resVal.split('.');
        if (sres[1] && sres[1].length > 5) {
          return sres[0] + '.' + sres[1].slice(0, 2);
        }
        return resVal;
      }
    }
    return '';
  };

  return _react2.default.createElement(
    _modal2.default,
    {
      title: '\u8D26\u6237\u63D0\u73B0',
      visible: visible,
      okText: '\u63D0\u73B0',
      cancelText: '\u53D6\u6D88',
      onOk: onOkByAmount,
      onCancel: onCancel,
      width: 480
    },
    _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(_formControl2.default, {
        type: 'number',
        style: { width: 432 },
        placeholder: '\u8BF7\u8F93\u5165\u91D1\u989D',
        className: _style2.default.input,
        trim: true,
        value: amountValue.amount,
        formatter: function formatter(value) {
          return ('\xA5 ' + value).replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        },
        parser: function parser(value) {
          return value.replace(/¥\s?|(,*)/g, '');
        },
        min: amountValue.minAmount,
        max: amountValue.maxAmount,
        maxLength: 18,
        onChange: function onChange(v) {
          v = Number(v);
          if (v >= amountValue.minAmount && v <= amountValue.maxAmount) {
            amountValue.amount = v;
            setAmount(_extends({}, amountValue));
          }
        }
      })
    ),
    _react2.default.createElement(
      'p',
      { className: _style2.default.remark_tip },
      '\u53EF\u63D0\u73B0\u91D1\u989D\uFF1A\xA5',
      detail.balanceAccount
    ),
    _react2.default.createElement(
      'h3',
      { className: _style2.default.h3 },
      '\u63D0\u73B0\u5230\u94F6\u884C\u5361'
    ),
    _react2.default.createElement(
      'ol',
      null,
      bankList.length ? bankList.map(function (item, idx) {
        return _react2.default.createElement(
          'li',
          { key: idx, className: _style2.default.bank_items },
          _react2.default.createElement(
            'div',
            { className: _style2.default.bank_icon },
            _react2.default.createElement('span', null)
          ),
          _react2.default.createElement(
            'h4',
            { className: _style2.default.bank_name },
            item.bankName
          ),
          _react2.default.createElement(
            'div',
            { className: _style2.default.card_no },
            item.cardNum
          ),
          _react2.default.createElement(
            'div',
            { className: _style2.default.checkbox },
            _react2.default.createElement(_formControl2.default, {
              type: 'checkbox',
              defaultChecked: bankList.length === 1,
              onChange: function onChange(v) {
                return changeBankCard(v, item);
              }
            })
          )
        );
      }) : _react2.default.createElement(
        'li',
        null,
        _react2.default.createElement(
          'div',
          { className: _style2.default.empty_bank },
          '\u6682\u65E0\u53EF\u63D0\u73B0\u7684\u94F6\u884C\u5361'
        )
      )
    ),
    _react2.default.createElement(
      'div',
      { className: _style2.default.procedures },
      '\u624B\u7EED\u8D39\uFF1A\uFF08\u542B',
      detail.withdrawServiceRate,
      '%\u5E73\u53F0\u670D\u52A1\u8D39+',
      detail.withdrawFeeAmount,
      '\u5143\u63D0\u73B0\u624B\u7EED\u8D39\uFF09',
      amountValue.amount ? _react2.default.createElement(
        'span',
        { className: _style2.default.cut_num },
        '\u5171\u8BA1\uFF1A',
        computeOffAmount() || '--'
      ) : null
    ),
    _react2.default.createElement(
      'div',
      { style: { marginTop: 15, fontSize: 12, color: '#aaa' } },
      '\u3010\u6C47\u4ED8\u8D26\u5BF9\u516C\u63D0\u73B0\u53D7\u7406\u65F6\u95F4\uFF1A10:00AM\u2014\u201424:00PM\u3011\u3001\u3010\u5E73\u53F0\u4E3A\u4FDD\u8BC1\u8D44\u91D1\u5B89\u5168\uFF0C\u8DF3\u8F6C\u6C47\u4ED8\u540E\u53EF\u80FD\u5B58\u5728\u7684\u64CD\u4F5C\u65F6\u95F4\u8FD4\u56DE\u7ED3\u679C\u65F6\u6548\u4E3A2\u5C0F\u65F6\uFF0C\u5E73\u53F0\u4F1A\u5BF9\u63D0\u73B0\u67092\u5C0F\u65F6\u7684\u9501\u5B9A\uFF0C\u5982\u679C\u5931\u8D252\u5C0F\u65F6\u540E\u89E3\u9501\u3011'
    ),
    _react2.default.createElement(
      'div',
      { className: _style2.default.enabled_amount },
      '\u9884\u8BA1\u5B9E\u9645\u5230\u8D26\u91D1\u989D\uFF1A',
      groundAmount() || '--',
      '\u5143'
    )
  );
}

exports.default = Withdrawal;
module.exports = exports['default'];